export { TRIGGERS, SOURCES, SHADOW_ITEM_MARKER_PROPERTY_NAME, SHADOW_PLACEHOLDER_ITEM_ID, DRAGGED_ELEMENT_ID, alertToScreenReader, setDebugMode } from "svelte-dnd-action";
export declare function overrideItemIdKeyNameBeforeInitialisingDndZones(newId: string): void;
declare type SolidOptions = {
    items: () => Array<Record<string, any>>; /**a getter the list of items (SIGNAL or a getter to STORE value) that was used to generate the children of the given node (the list used in the `<For>` block*/
    type?: string | (() => string); /**the type of the dnd zone. children dragged from here can only be dropped in other zones of the same type, default to a base type*/
    flipDurationMs?: number | (() => number); /**the duration of the flip animation. zero means no animation*/
    dragDisabled?: boolean | (() => boolean);
    morphDisabled?: boolean | (() => boolean); /**whether dragged element should morph to zone dimensions*/
    dropFromOthersDisabled?: boolean | (() => boolean);
    zoneTabIndex?: number | (() => number); /**set the tabindex of the list container when not dragging*/
    dropTargetStyle?: Record<string, string> | (() => Record<string, string>);
    dropTargetClasses?: string[] | (() => string[]);
};
export declare function dndzone(node: HTMLElement, optionsGetter: () => SolidOptions): void;
