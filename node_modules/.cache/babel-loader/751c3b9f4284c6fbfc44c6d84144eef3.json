{"ast":null,"code":"var _jsxFileName = \"C:\\\\dragon-drop\\\\src\\\\components\\\\DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDrop } from 'react-dnd';\nimport PostService from '../api/postService';\nimport PictureList from './pictureList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DragDrop = () => {\n  _s();\n\n  const [boards, setBoards] = useState([]);\n  const [area, setArea] = useState([]);\n  useEffect(async () => {\n    const response = await PostService.getAll();\n    const data = response.data;\n    setBoards(data);\n  }, []);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: \"image\",\n    drop: item => addImageToBoard(item.id),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n\n  const addImageToBoard = async id => {\n    console.log(boards);\n    const pictureList = boards.filter(board => id === board.id);\n    debugger;\n    setArea(area => [...area, pictureList[0]]);\n    console.log(area);\n  };\n\n  console.log(area);\n  console.log(boards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board__title\",\n        children: boards.map(board => {\n          return /*#__PURE__*/_jsxDEV(PictureList, {\n            title: board.title,\n            id: board.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board1\",\n      ref: drop,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board__title\",\n        children: area.map(are => {\n          return /*#__PURE__*/_jsxDEV(PictureList, {\n            title: are.title,\n            id: are.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DragDrop, \"WovYrSHjg8ekFagibnZyHWUr3M8=\", false, function () {\n  return [useDrop];\n});\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["C:/dragon-drop/src/components/DragDrop.js"],"names":["React","useEffect","useState","useDrop","PostService","PictureList","DragDrop","boards","setBoards","area","setArea","response","getAll","data","isOver","drop","accept","item","addImageToBoard","id","collect","monitor","console","log","pictureList","filter","board","map","title","are"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMU,QAAQ,GAAG,MAAMP,WAAW,CAACQ,MAAZ,EAAvB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACAL,IAAAA,SAAS,CAACK,IAAD,CAAT;AACD,GAJM,EAIJ,EAJI,CAAT;AAOE,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAaC,IAAb,IAAqBZ,OAAO,CAAC,OAAO;AACxCa,IAAAA,MAAM,EAAE,OADgC;AAExCD,IAAAA,IAAI,EAAGE,IAAD,IAAUC,eAAe,CAACD,IAAI,CAACE,EAAN,CAFS;AAGxCC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBP,MAAAA,MAAM,EAAE,CAAC,CAACO,OAAO,CAACP,MAAR;AADW,KAAd;AAH+B,GAAP,CAAD,CAAlC;;AAQF,QAAMI,eAAe,GAAG,MAAOC,EAAP,IAAc;AAClCG,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACA,UAAMiB,WAAW,GAAGjB,MAAM,CAACkB,MAAP,CAAeC,KAAD,IAAWP,EAAE,KAAKO,KAAK,CAACP,EAAtC,CAApB;AACA;AACAT,IAAAA,OAAO,CAAED,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUe,WAAW,CAAC,CAAD,CAArB,CAAX,CAAP;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACH,GAND;;AASAa,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AAEA,sBACI;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,QADd;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACKA,MAAM,CAACoB,GAAP,CAAWD,KAAK,IAAI;AACjB,8BAAO,QAAC,WAAD;AAAa,YAAA,KAAK,EAAEA,KAAK,CAACE,KAA1B;AAAiC,YAAA,EAAE,EAAEF,KAAK,CAACP;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAAP;AACC,SAFJ;AADL;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AACI,MAAA,SAAS,EAAC,QADd;AACuB,MAAA,GAAG,EAAEJ,IAD5B;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACCN,IAAI,CAACkB,GAAL,CAASE,GAAG,IAAI;AAEb,8BAAO,QAAC,WAAD;AAAa,YAAA,KAAK,EAAEA,GAAG,CAACD,KAAxB;AAA+B,YAAA,EAAE,EAAEC,GAAG,CAACV;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAAP;AACC,SAHJ;AADD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CArDD;;GAAMb,Q;UAY2BH,O;;;KAZ3BG,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport PostService from '../api/postService';\r\nimport PictureList from './pictureList';\r\n\r\n\r\nconst DragDrop = () => {\r\n\r\n    const [boards, setBoards] = useState([])\r\n    const [area, setArea] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const response = await PostService.getAll()\r\n        const data = response.data\r\n        setBoards(data)\r\n      }, [])\r\n\r\n    \r\n      const [{ isOver }, drop] = useDrop(() => ({\r\n        accept: \"image\",\r\n        drop: (item) => addImageToBoard(item.id),\r\n        collect: (monitor) => ({\r\n          isOver: !!monitor.isOver(),\r\n        }),\r\n      }));\r\n\r\n    const addImageToBoard = async (id) => {\r\n        console.log(boards)\r\n        const pictureList = boards.filter((board) => id === board.id);\r\n        debugger\r\n        setArea((area) => [...area, pictureList[0]])\r\n        console.log(area)\r\n    }\r\n  \r\n    \r\n    console.log(area)\r\n    console.log(boards)\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className='board1'>\r\n                <div className='board__title'>\r\n                    {boards.map(board => {\r\n                        return <PictureList title={board.title} id={board.id}/>\r\n                        })}\r\n                </div>\r\n            </div>\r\n            <div\r\n                className='board1' ref={drop}>\r\n                <div className='board__title'>\r\n                {area.map(are => {\r\n                    \r\n                    return <PictureList title={are.title} id={are.id}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DragDrop;"]},"metadata":{},"sourceType":"module"}