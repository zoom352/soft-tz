{"ast":null,"code":"var _jsxFileName = \"C:\\\\dragon-drop\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport PostService from './api/postService';\nimport './App.css';\nimport Board from './boards/board'; // import Posts from './posts/posts';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [boards, setBoards] = useState([])\n  const [boards, setBoards] = useState([]);\n  const [currentBoard, setCurrentBoard] = useState(null);\n  const [currentItem, setCurrentItem] = useState(null); // useEffect(async () => {\n  //   const response = await PostService.getAll()\n  //   const data = response.data\n  //   setBoards(data)\n  // }, [])\n\n  console.log(boards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"E3mkKBjRBxAMgWnEMLzh8bZbAB8=\");\n\n_c = App;\nexport default App; // https://jsonplaceholder.typicode.com/posts?_limit=10\n\nfunction dragOverHandler(e) {\n  e.preventDefault();\n\n  if (e.target.className == 'item') {\n    e.target.style.boxShadow = '0 4px 3px gray';\n  }\n}\n\nfunction dragLeaveHandler(e) {\n  e.target.style.boxShadow = 'none';\n}\n\nfunction dragStartHandler(e, board, item) {\n  setCurrentBoard(board);\n  setCurrentItem(item);\n}\n\nfunction dragEndHandler(e) {\n  e.target.style.boxShadow = 'none';\n}\n\nfunction dropHandler(e, board, item) {\n  e.preventDefault();\n  const currentIndex = currentBoard.items.indexOf(currentItem); // currentBoard.items.splice(currentIndex, 1)\n\n  const dropIndex = board.items.indexOf(item); // board.items.splice(dropIndex + 1, 0, currentItem)\n\n  setBoards(boards.map(b => {\n    if (b.id === board.id) {\n      return board;\n    }\n\n    if (b.id === currentBoard.id) {\n      return currentBoard;\n    }\n\n    return b;\n  }));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/dragon-drop/src/App.js"],"names":["useEffect","useState","PostService","Board","App","boards","setBoards","currentBoard","setCurrentBoard","currentItem","setCurrentItem","console","log","dragOverHandler","e","preventDefault","target","className","style","boxShadow","dragLeaveHandler","dragStartHandler","board","item","dragEndHandler","dropHandler","currentIndex","items","indexOf","dropIndex","map","b","id"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CACA;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C,CALgB,CAOhB;AACA;AACA;AACA;AACA;;AAMAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1BD;;GAAMD,G;;KAAAA,G;AA4BN,eAAeA,GAAf,C,CAEA;;AAIA,SAASS,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BA,EAAAA,CAAC,CAACC,cAAF;;AACA,MAAGD,CAAC,CAACE,MAAF,CAASC,SAAT,IAAsB,MAAzB,EAAiC;AAC7BH,IAAAA,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,SAAf,GAA2B,gBAA3B;AACH;AACF;;AAED,SAASC,gBAAT,CAA0BN,CAA1B,EAA6B;AAC3BA,EAAAA,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,SAAf,GAA2B,MAA3B;AACD;;AAED,SAASE,gBAAT,CAA2BP,CAA3B,EAA8BQ,KAA9B,EAAqCC,IAArC,EAA2C;AACzCf,EAAAA,eAAe,CAACc,KAAD,CAAf;AACAZ,EAAAA,cAAc,CAACa,IAAD,CAAd;AACD;;AAED,SAASC,cAAT,CAAwBV,CAAxB,EAA2B;AACzBA,EAAAA,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,SAAf,GAA2B,MAA3B;AACD;;AAED,SAASM,WAAT,CAAsBX,CAAtB,EAAyBQ,KAAzB,EAAgCC,IAAhC,EAAsC;AACpCT,EAAAA,CAAC,CAACC,cAAF;AACA,QAAMW,YAAY,GAAGnB,YAAY,CAACoB,KAAb,CAAmBC,OAAnB,CAA2BnB,WAA3B,CAArB,CAFoC,CAGpC;;AACA,QAAMoB,SAAS,GAAGP,KAAK,CAACK,KAAN,CAAYC,OAAZ,CAAoBL,IAApB,CAAlB,CAJoC,CAKpC;;AACAjB,EAAAA,SAAS,CAACD,MAAM,CAACyB,GAAP,CAAWC,CAAC,IAAI;AACxB,QAAIA,CAAC,CAACC,EAAF,KAASV,KAAK,CAACU,EAAnB,EAAsB;AACpB,aAAOV,KAAP;AACD;;AACD,QAAGS,CAAC,CAACC,EAAF,KAASzB,YAAY,CAACyB,EAAzB,EAA6B;AAC3B,aAAOzB,YAAP;AACD;;AACD,WAAOwB,CAAP;AACD,GARS,CAAD,CAAT;AASD","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport PostService from './api/postService';\nimport './App.css';\nimport Board from './boards/board';\n// import Posts from './posts/posts';\n\n\nconst App = () => {\n\n  // const [boards, setBoards] = useState([])\n  const [boards, setBoards] = useState([])\n  const [currentBoard, setCurrentBoard] = useState(null)\n  const [currentItem, setCurrentItem] = useState(null)\n\n  // useEffect(async () => {\n  //   const response = await PostService.getAll()\n  //   const data = response.data\n  //   setBoards(data)\n  // }, [])\n\n\n\n\n\n  console.log(boards)\n  return (\n    <div className='app'>\n     \n    </div>\n\n\n\n  );\n}\n\nexport default App;\n\n// https://jsonplaceholder.typicode.com/posts?_limit=10\n\n\n\nfunction dragOverHandler(e) {\n  e.preventDefault()\n  if(e.target.className == 'item') {\n      e.target.style.boxShadow = '0 4px 3px gray'\n  }\n}\n\nfunction dragLeaveHandler(e) {\n  e.target.style.boxShadow = 'none'\n}\n\nfunction dragStartHandler (e, board, item) {\n  setCurrentBoard(board)\n  setCurrentItem(item)\n}\n\nfunction dragEndHandler(e) {\n  e.target.style.boxShadow = 'none'\n}\n\nfunction dropHandler (e, board, item) {\n  e.preventDefault()   \n  const currentIndex = currentBoard.items.indexOf(currentItem)\n  // currentBoard.items.splice(currentIndex, 1)\n  const dropIndex = board.items.indexOf(item)\n  // board.items.splice(dropIndex + 1, 0, currentItem)\n  setBoards(boards.map(b => {\n    if (b.id === board.id){\n      return board\n    }\n    if(b.id === currentBoard.id) {\n      return currentBoard\n    }\n    return b\n  }))\n}"]},"metadata":{},"sourceType":"module"}