{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { invariant } from '@react-dnd/invariant';\nimport { matchesType } from '../utils/matchesType';\nimport { getSourceClientOffset as _getSourceClientOffset, getDifferenceFromInitialOffset as _getDifferenceFromInitialOffset } from '../utils/coords';\nimport { areDirty } from '../utils/dirtiness';\nexport var DragDropMonitorImpl = /*#__PURE__*/function () {\n  function DragDropMonitorImpl(store, registry) {\n    _classCallCheck(this, DragDropMonitorImpl);\n\n    _defineProperty(this, \"store\", void 0);\n\n    _defineProperty(this, \"registry\", void 0);\n\n    this.store = store;\n    this.registry = registry;\n  }\n\n  _createClass(DragDropMonitorImpl, [{\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        handlerIds: undefined\n      };\n      var handlerIds = options.handlerIds;\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n      var prevStateId = this.store.getState().stateId;\n\n      var handleChange = function handleChange() {\n        var state = _this.store.getState();\n\n        var currentStateId = state.stateId;\n\n        try {\n          var canSkipListener = currentStateId === prevStateId || currentStateId === prevStateId + 1 && !areDirty(state.dirtyHandlerIds, handlerIds);\n\n          if (!canSkipListener) {\n            listener();\n          }\n        } finally {\n          prevStateId = currentStateId;\n        }\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      var _this2 = this;\n\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      var previousState = this.store.getState().dragOffset;\n\n      var handleChange = function handleChange() {\n        var nextState = _this2.store.getState().dragOffset;\n\n        if (nextState === previousState) {\n          return;\n        }\n\n        previousState = nextState;\n        listener();\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId);\n      invariant(source, \"Expected to find a valid source. sourceId=\".concat(sourceId));\n\n      if (this.isDragging()) {\n        return false;\n      }\n\n      return source.canDrag(this, sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      // undefined on initial render\n      if (!targetId) {\n        return false;\n      }\n\n      var target = this.registry.getTarget(targetId);\n      invariant(target, \"Expected to find a valid target. targetId=\".concat(targetId));\n\n      if (!this.isDragging() || this.didDrop()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n      return matchesType(targetType, draggedItemType) && target.canDrop(this, targetId);\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      return Boolean(this.getItemType());\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      // undefined on initial render\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId, true);\n      invariant(source, \"Expected to find a valid source. sourceId=\".concat(sourceId));\n\n      if (!this.isDragging() || !this.isSourcePublic()) {\n        return false;\n      }\n\n      var sourceType = this.registry.getSourceType(sourceId);\n      var draggedItemType = this.getItemType();\n\n      if (sourceType !== draggedItemType) {\n        return false;\n      }\n\n      return source.isDragging(this, sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shallow: false\n      }; // undefined on initial render\n\n      if (!targetId) {\n        return false;\n      }\n\n      var shallow = options.shallow;\n\n      if (!this.isDragging()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n\n      if (draggedItemType && !matchesType(targetType, draggedItemType)) {\n        return false;\n      }\n\n      var targetIds = this.getTargetIds();\n\n      if (!targetIds.length) {\n        return false;\n      }\n\n      var index = targetIds.indexOf(targetId);\n\n      if (shallow) {\n        return index === targetIds.length - 1;\n      } else {\n        return index > -1;\n      }\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.store.getState().dragOperation.itemType;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.store.getState().dragOperation.item;\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.store.getState().dragOperation.sourceId;\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.store.getState().dragOperation.targetIds;\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.store.getState().dragOperation.dropResult;\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.store.getState().dragOperation.didDrop;\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return Boolean(this.store.getState().dragOperation.isSourcePublic);\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.store.getState().dragOffset.initialClientOffset;\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.store.getState().dragOffset.initialSourceClientOffset;\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.store.getState().dragOffset.clientOffset;\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return _getSourceClientOffset(this.store.getState().dragOffset);\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return _getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    }\n  }]);\n\n  return DragDropMonitorImpl;\n}();","map":{"version":3,"sources":["C:/dragon-drop/soft-tz/node_modules/dnd-core/dist/esm/classes/DragDropMonitorImpl.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","invariant","matchesType","getSourceClientOffset","_getSourceClientOffset","getDifferenceFromInitialOffset","_getDifferenceFromInitialOffset","areDirty","DragDropMonitorImpl","store","registry","subscribeToStateChange","listener","_this","options","arguments","undefined","handlerIds","Array","isArray","prevStateId","getState","stateId","handleChange","state","currentStateId","canSkipListener","dirtyHandlerIds","subscribe","subscribeToOffsetChange","_this2","previousState","dragOffset","nextState","canDragSource","sourceId","source","getSource","concat","isDragging","canDrag","canDropOnTarget","targetId","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","canDrop","Boolean","isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","shallow","targetIds","getTargetIds","index","indexOf","dragOperation","itemType","getItem","item","getSourceId","getDropResult","dropResult","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","clientOffset"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { invariant } from '@react-dnd/invariant';\nimport { matchesType } from '../utils/matchesType';\nimport { getSourceClientOffset as _getSourceClientOffset, getDifferenceFromInitialOffset as _getDifferenceFromInitialOffset } from '../utils/coords';\nimport { areDirty } from '../utils/dirtiness';\nexport var DragDropMonitorImpl = /*#__PURE__*/function () {\n  function DragDropMonitorImpl(store, registry) {\n    _classCallCheck(this, DragDropMonitorImpl);\n\n    _defineProperty(this, \"store\", void 0);\n\n    _defineProperty(this, \"registry\", void 0);\n\n    this.store = store;\n    this.registry = registry;\n  }\n\n  _createClass(DragDropMonitorImpl, [{\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        handlerIds: undefined\n      };\n      var handlerIds = options.handlerIds;\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n      var prevStateId = this.store.getState().stateId;\n\n      var handleChange = function handleChange() {\n        var state = _this.store.getState();\n\n        var currentStateId = state.stateId;\n\n        try {\n          var canSkipListener = currentStateId === prevStateId || currentStateId === prevStateId + 1 && !areDirty(state.dirtyHandlerIds, handlerIds);\n\n          if (!canSkipListener) {\n            listener();\n          }\n        } finally {\n          prevStateId = currentStateId;\n        }\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"subscribeToOffsetChange\",\n    value: function subscribeToOffsetChange(listener) {\n      var _this2 = this;\n\n      invariant(typeof listener === 'function', 'listener must be a function.');\n      var previousState = this.store.getState().dragOffset;\n\n      var handleChange = function handleChange() {\n        var nextState = _this2.store.getState().dragOffset;\n\n        if (nextState === previousState) {\n          return;\n        }\n\n        previousState = nextState;\n        listener();\n      };\n\n      return this.store.subscribe(handleChange);\n    }\n  }, {\n    key: \"canDragSource\",\n    value: function canDragSource(sourceId) {\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId);\n      invariant(source, \"Expected to find a valid source. sourceId=\".concat(sourceId));\n\n      if (this.isDragging()) {\n        return false;\n      }\n\n      return source.canDrag(this, sourceId);\n    }\n  }, {\n    key: \"canDropOnTarget\",\n    value: function canDropOnTarget(targetId) {\n      // undefined on initial render\n      if (!targetId) {\n        return false;\n      }\n\n      var target = this.registry.getTarget(targetId);\n      invariant(target, \"Expected to find a valid target. targetId=\".concat(targetId));\n\n      if (!this.isDragging() || this.didDrop()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n      return matchesType(targetType, draggedItemType) && target.canDrop(this, targetId);\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging() {\n      return Boolean(this.getItemType());\n    }\n  }, {\n    key: \"isDraggingSource\",\n    value: function isDraggingSource(sourceId) {\n      // undefined on initial render\n      if (!sourceId) {\n        return false;\n      }\n\n      var source = this.registry.getSource(sourceId, true);\n      invariant(source, \"Expected to find a valid source. sourceId=\".concat(sourceId));\n\n      if (!this.isDragging() || !this.isSourcePublic()) {\n        return false;\n      }\n\n      var sourceType = this.registry.getSourceType(sourceId);\n      var draggedItemType = this.getItemType();\n\n      if (sourceType !== draggedItemType) {\n        return false;\n      }\n\n      return source.isDragging(this, sourceId);\n    }\n  }, {\n    key: \"isOverTarget\",\n    value: function isOverTarget(targetId) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        shallow: false\n      };\n\n      // undefined on initial render\n      if (!targetId) {\n        return false;\n      }\n\n      var shallow = options.shallow;\n\n      if (!this.isDragging()) {\n        return false;\n      }\n\n      var targetType = this.registry.getTargetType(targetId);\n      var draggedItemType = this.getItemType();\n\n      if (draggedItemType && !matchesType(targetType, draggedItemType)) {\n        return false;\n      }\n\n      var targetIds = this.getTargetIds();\n\n      if (!targetIds.length) {\n        return false;\n      }\n\n      var index = targetIds.indexOf(targetId);\n\n      if (shallow) {\n        return index === targetIds.length - 1;\n      } else {\n        return index > -1;\n      }\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.store.getState().dragOperation.itemType;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.store.getState().dragOperation.item;\n    }\n  }, {\n    key: \"getSourceId\",\n    value: function getSourceId() {\n      return this.store.getState().dragOperation.sourceId;\n    }\n  }, {\n    key: \"getTargetIds\",\n    value: function getTargetIds() {\n      return this.store.getState().dragOperation.targetIds;\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.store.getState().dragOperation.dropResult;\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.store.getState().dragOperation.didDrop;\n    }\n  }, {\n    key: \"isSourcePublic\",\n    value: function isSourcePublic() {\n      return Boolean(this.store.getState().dragOperation.isSourcePublic);\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.store.getState().dragOffset.initialClientOffset;\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.store.getState().dragOffset.initialSourceClientOffset;\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.store.getState().dragOffset.clientOffset;\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return _getSourceClientOffset(this.store.getState().dragOffset);\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return _getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    }\n  }]);\n\n  return DragDropMonitorImpl;\n}();"]},"metadata":{},"sourceType":"module"}