{"ast":null,"code":"var _jsxFileName = \"C:\\\\dragon-drop\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport PostService from './api/postService';\nimport './App.css'; // import Posts from './posts/posts';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [boards, setBoards] = useState([])\n  const [boards, setBoards] = useState([]);\n  useEffect(async () => {\n    const response = await PostService.getAll();\n    const data = response.data;\n    setBoards(data);\n  }, []);\n\n  function dragOverHandler(e) {\n    e.preventDefault();\n\n    if (e.target.className == 'board') {\n      e.target.style.boxShadow = '0 4px 3px gray';\n    }\n  }\n\n  function dragLeaveHandler(e) {\n    e.target.style.boxShadow = 'none';\n  }\n\n  function dragStartHandler(e, board, item) {\n    setCurrentBoard(board);\n    setCurrentItem(item);\n  }\n\n  function dragEndHandler(e) {\n    e.target.style.boxShadow = 'none';\n  }\n\n  function dropHandler(e, board, item) {\n    e.preventDefault();\n    const currentIndex = currentBoard.items.indexOf(currentItem);\n    currentBoard.items.splice(currentIndex, 1);\n    const dropIndex = board.items.indexOf(item);\n    board.items.splice(dropIndex + 1, 0, currentItem);\n    setBoards(boards.map(b => {\n      if (b.id === board.id) {\n        return board;\n      } // if(b.id === currentBoard.id){\n      //   return currentBoard\n      // }\n\n\n      return b;\n    }));\n  }\n\n  console.log(boards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board__title\",\n        children: boards.map(board => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          draggable: true,\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n\n_c = App;\nexport default App; // https://jsonplaceholder.typicode.com/posts?_limit=10\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/dragon-drop/src/App.js"],"names":["useEffect","useState","PostService","App","boards","setBoards","response","getAll","data","dragOverHandler","e","preventDefault","target","className","style","boxShadow","dragLeaveHandler","dragStartHandler","board","item","setCurrentBoard","setCurrentItem","dragEndHandler","dropHandler","currentIndex","currentBoard","items","indexOf","currentItem","splice","dropIndex","map","b","id","console","log","title"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,WAAP,C,CAEA;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAIAD,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMM,QAAQ,GAAG,MAAMJ,WAAW,CAACK,MAAZ,EAAvB;AACA,UAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACAH,IAAAA,SAAS,CAACG,IAAD,CAAT;AACD,GAJQ,EAIN,EAJM,CAAT;;AAQA,WAASC,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAID,CAAC,CAACE,MAAF,CAASC,SAAT,IAAsB,OAA1B,EAAmC;AACjCH,MAAAA,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,SAAf,GAA2B,gBAA3B;AACD;AACF;;AAED,WAASC,gBAAT,CAA0BN,CAA1B,EAA6B;AAC3BA,IAAAA,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,SAAf,GAA2B,MAA3B;AACD;;AAED,WAASE,gBAAT,CAA0BP,CAA1B,EAA6BQ,KAA7B,EAAoCC,IAApC,EAA0C;AACxCC,IAAAA,eAAe,CAACF,KAAD,CAAf;AACAG,IAAAA,cAAc,CAACF,IAAD,CAAd;AACD;;AAED,WAASG,cAAT,CAAwBZ,CAAxB,EAA2B;AACzBA,IAAAA,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,SAAf,GAA2B,MAA3B;AACD;;AAED,WAASQ,WAAT,CAAqBb,CAArB,EAAwBQ,KAAxB,EAA+BC,IAA/B,EAAqC;AACnCT,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMa,YAAY,GAAGC,YAAY,CAACC,KAAb,CAAmBC,OAAnB,CAA2BC,WAA3B,CAArB;AACAH,IAAAA,YAAY,CAACC,KAAb,CAAmBG,MAAnB,CAA0BL,YAA1B,EAAwC,CAAxC;AACA,UAAMM,SAAS,GAAGZ,KAAK,CAACQ,KAAN,CAAYC,OAAZ,CAAoBR,IAApB,CAAlB;AACAD,IAAAA,KAAK,CAACQ,KAAN,CAAYG,MAAZ,CAAmBC,SAAS,GAAG,CAA/B,EAAkC,CAAlC,EAAqCF,WAArC;AACAvB,IAAAA,SAAS,CAACD,MAAM,CAAC2B,GAAP,CAAWC,CAAC,IAAI;AACxB,UAAIA,CAAC,CAACC,EAAF,KAASf,KAAK,CAACe,EAAnB,EAAuB;AACrB,eAAOf,KAAP;AACD,OAHuB,CAIxB;AACA;AACA;;;AACA,aAAOc,CAAP;AACD,KARS,CAAD,CAAT;AASD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAY/B,MAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,OADZ;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACGA,MAAM,CAAC2B,GAAP,CAAWb,KAAK,iBACf;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,SAAS,EAAE,IAAjC;AAAA,oBAAwCA,KAAK,CAACkB;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApED;;GAAMjC,G;;KAAAA,G;AAsEN,eAAeA,GAAf,C,CAEA","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport PostService from './api/postService';\nimport './App.css';\n\n// import Posts from './posts/posts';\n\n\nconst App = () => {\n\n  // const [boards, setBoards] = useState([])\n  const [boards, setBoards] = useState([])\n  \n\n\n  useEffect(async () => {\n    const response = await PostService.getAll()\n    const data = response.data\n    setBoards(data)\n  }, [])\n\n\n\n  function dragOverHandler(e) {\n    e.preventDefault()\n    if (e.target.className == 'board') {\n      e.target.style.boxShadow = '0 4px 3px gray'\n    }\n  }\n\n  function dragLeaveHandler(e) {\n    e.target.style.boxShadow = 'none'\n  }\n\n  function dragStartHandler(e, board, item) {\n    setCurrentBoard(board)\n    setCurrentItem(item)\n  }\n\n  function dragEndHandler(e) {\n    e.target.style.boxShadow = 'none'\n  }\n\n  function dropHandler(e, board, item) {\n    e.preventDefault()\n    const currentIndex = currentBoard.items.indexOf(currentItem)\n    currentBoard.items.splice(currentIndex, 1)\n    const dropIndex = board.items.indexOf(item)\n    board.items.splice(dropIndex + 1, 0, currentItem)\n    setBoards(boards.map(b => {\n      if (b.id === board.id) {\n        return board\n      }\n      // if(b.id === currentBoard.id){\n      //   return currentBoard\n      // }\n      return b\n    }))\n  }\n\n  console.log(boards)\n  return (\n    <div className='app'>\n      <div\n        className='board'>\n          <div className='board__title'>\n            {boards.map(board => (\n              <div className='item' draggable={true}>{board.title}</div>\n            ))}  \n        </div>\n      </div>\n    </div>\n\n\n\n  );\n}\n\nexport default App;\n\n// https://jsonplaceholder.typicode.com/posts?_limit=10"]},"metadata":{},"sourceType":"module"}