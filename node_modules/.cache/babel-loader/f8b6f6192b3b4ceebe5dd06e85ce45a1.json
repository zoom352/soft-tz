{"ast":null,"code":"import _toConsumableArray from\"C:/dragon-drop/soft-tz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/dragon-drop/soft-tz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/dragon-drop/soft-tz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/dragon-drop/soft-tz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useDrop}from'react-dnd';import PostService from'../api/postService';import Button from'./button';import PictureList from'./pictureList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DragDrop=function DragDrop(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),boards=_useState2[0],setBoards=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),area=_useState4[0],setArea=_useState4[1];useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return PostService.getAll();case 2:response=_context.sent;data=response.data;setBoards(data);case 5:case\"end\":return _context.stop();}}},_callee);})),[]);var _useDrop=useDrop(function(){return{accept:\"image\",drop:function drop(item){return addImageToBoard(item.id);},collect:function collect(monitor){return{isOver:!!monitor.isOver()};}};}),_useDrop2=_slicedToArray(_useDrop,2),isOver=_useDrop2[0].isOver,drop=_useDrop2[1];var addImageToBoard=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var response,data,pictureList;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return PostService.getAll();case 2:response=_context2.sent;data=response.data;setBoards(data);pictureList=data.filter(function(board){return id===board.id;});setArea(function(area){return[].concat(_toConsumableArray(area),[pictureList[0]]);});console.log(area);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function addImageToBoard(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"board\",children:/*#__PURE__*/_jsx(\"div\",{className:\"board__title\",children:boards.map(function(board){return/*#__PURE__*/_jsx(PictureList,{title:board.title,id:board.id});})})}),/*#__PURE__*/_jsx(\"div\",{className:\"board1\",ref:drop,children:/*#__PURE__*/_jsx(\"div\",{className:\"board__title\",children:area.map(function(board){return/*#__PURE__*/_jsx(PictureList,{area:board.title,title:board.title,id:board.id});})})}),/*#__PURE__*/_jsx(Button,{area:area})]});};export default DragDrop;","map":{"version":3,"sources":["C:/dragon-drop/soft-tz/src/components/DragDrop.js"],"names":["React","useEffect","useState","useDrop","PostService","Button","PictureList","DragDrop","boards","setBoards","area","setArea","getAll","response","data","accept","drop","item","addImageToBoard","id","collect","monitor","isOver","pictureList","filter","board","console","log","map","title"],"mappings":"yjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,wFAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAEnB,cAA4BL,QAAQ,CAAC,EAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eACA,eAAwBP,QAAQ,CAAC,EAAD,CAAhC,yCAAOQ,IAAP,eAAaC,OAAb,eAEAV,SAAS,sEAAC,2KACiBG,CAAAA,WAAW,CAACQ,MAAZ,EADjB,QACAC,QADA,eAEAC,IAFA,CAEOD,QAAQ,CAACC,IAFhB,CAGNL,SAAS,CAACK,IAAD,CAAT,CAHM,sDAAD,GAIJ,EAJI,CAAT,CAOE,aAA2BX,OAAO,CAAC,iBAAO,CACxCY,MAAM,CAAE,OADgC,CAExCC,IAAI,CAAE,cAACC,IAAD,QAAUC,CAAAA,eAAe,CAACD,IAAI,CAACE,EAAN,CAAzB,EAFkC,CAGxCC,OAAO,CAAE,iBAACC,OAAD,QAAc,CACrBC,MAAM,CAAE,CAAC,CAACD,OAAO,CAACC,MAAR,EADW,CAAd,EAH+B,CAAP,EAAD,CAAlC,sCAASA,MAAT,cAASA,MAAT,CAAmBN,IAAnB,cAQF,GAAME,CAAAA,eAAe,2FAAG,kBAAOC,EAAP,2KACGf,CAAAA,WAAW,CAACQ,MAAZ,EADH,QACdC,QADc,gBAEdC,IAFc,CAEPD,QAAQ,CAACC,IAFF,CAGpBL,SAAS,CAACK,IAAD,CAAT,CACMS,WAJc,CAIAT,IAAI,CAACU,MAAL,CAAY,SAACC,KAAD,QAAWN,CAAAA,EAAE,GAAKM,KAAK,CAACN,EAAxB,EAAZ,CAJA,CAMpBR,OAAO,CAAC,SAACD,IAAD,qCAAcA,IAAd,GAAoBa,WAAW,CAAC,CAAD,CAA/B,IAAD,CAAP,CACAG,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EAPoB,wDAAH,kBAAfQ,CAAAA,eAAe,6CAArB,CAWA,mBACI,oCACI,YACI,SAAS,CAAC,OADd,uBAEI,YAAK,SAAS,CAAC,cAAf,UACKV,MAAM,CAACoB,GAAP,CAAW,SAAAH,KAAK,CAAI,CACjB,mBAAO,KAAC,WAAD,EAAa,KAAK,CAAEA,KAAK,CAACI,KAA1B,CAAiC,EAAE,CAAEJ,KAAK,CAACN,EAA3C,EAAP,CACC,CAFJ,CADL,EAFJ,EADJ,cASI,YACI,SAAS,CAAC,QADd,CACuB,GAAG,CAAEH,IAD5B,uBAEI,YAAK,SAAS,CAAC,cAAf,UACCN,IAAI,CAACkB,GAAL,CAAS,SAAAH,KAAK,CAAI,CAEf,mBAAO,KAAC,WAAD,EAAa,IAAI,CAAEA,KAAK,CAACI,KAAzB,CAAgC,KAAK,CAAEJ,KAAK,CAACI,KAA7C,CAAoD,EAAE,CAAEJ,KAAK,CAACN,EAA9D,EAAP,CACC,CAHJ,CADD,EAFJ,EATJ,cAkBI,KAAC,MAAD,EAAQ,IAAI,CAAET,IAAd,EAlBJ,GADJ,CAsBH,CArDD,CAuDA,cAAeH,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport PostService from '../api/postService';\r\nimport Button from './button';\r\nimport PictureList from './pictureList';\r\n\r\n\r\nconst DragDrop = () => {\r\n\r\n    const [boards, setBoards] = useState([])\r\n    const [area, setArea] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const response = await PostService.getAll()\r\n        const data = response.data\r\n        setBoards(data)\r\n      }, [])\r\n\r\n    \r\n      const [{ isOver }, drop] = useDrop(() => ({\r\n        accept: \"image\",\r\n        drop: (item) => addImageToBoard(item.id),\r\n        collect: (monitor) => ({\r\n          isOver: !!monitor.isOver(),\r\n        }),\r\n      }));\r\n\r\n    const addImageToBoard = async (id) => {\r\n        const response = await PostService.getAll()\r\n        const data = response.data\r\n        setBoards(data)\r\n        const pictureList = data.filter((board) => id === board.id);\r\n    \r\n        setArea((area) => [...area, pictureList[0]])\r\n        console.log(area)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className='board'>\r\n                <div className='board__title'>\r\n                    {boards.map(board => {\r\n                        return <PictureList title={board.title} id={board.id}/>\r\n                        })}\r\n                </div>\r\n            </div>\r\n            <div\r\n                className='board1' ref={drop}>\r\n                <div className='board__title'>\r\n                {area.map(board => {\r\n                    \r\n                    return <PictureList area={board.title} title={board.title} id={board.id}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <Button area={area}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DragDrop;"]},"metadata":{},"sourceType":"module"}