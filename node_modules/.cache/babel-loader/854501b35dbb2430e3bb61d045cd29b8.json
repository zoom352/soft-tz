{"ast":null,"code":"var _jsxFileName = \"C:\\\\dragon-drop\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport PostService from './api/postService';\nimport './App.css';\nimport Board from './boards/board'; // import Posts from './posts/posts';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [boards, setBoards] = useState([])\n  const [boards, setBoards] = useState([]);\n  const [currentBoard, setCurrentBoard] = useState(null);\n  const [currentItem, setCurrentItem] = useState(null); // useEffect(async () => {\n  //   const response = await PostService.getAll()\n  //   const data = response.data\n  //   setBoards(data)\n  // }, [])\n\n  console.log(boards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"E3mkKBjRBxAMgWnEMLzh8bZbAB8=\");\n\n_c = App;\nexport default App; // https://jsonplaceholder.typicode.com/posts?_limit=10\n// function dragOverHandler(e) {\n//   e.preventDefault()\n//   if(e.target.className == 'item') {\n//       e.target.style.boxShadow = '0 4px 3px gray'\n//   }\n// }\n// function dragLeaveHandler(e) {\n//   e.target.style.boxShadow = 'none'\n// }\n// function dragStartHandler (e, board, item) {\n//   setCurrentBoard(board)\n//   setCurrentItem(item)\n// }\n// function dragEndHandler(e) {\n//   e.target.style.boxShadow = 'none'\n// }\n// function dropHandler (e, board, item) {\n//   e.preventDefault()   \n//   const currentIndex = currentBoard.items.indexOf(currentItem)\n//   // currentBoard.items.splice(currentIndex, 1)\n//   const dropIndex = board.items.indexOf(item)\n//   // board.items.splice(dropIndex + 1, 0, currentItem)\n//   setBoards(boards.map(b => {\n//     if (b.id === board.id){\n//       return board\n//     }\n//     if(b.id === currentBoard.id) {\n//       return currentBoard\n//     }\n//     return b\n//   }))\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/dragon-drop/src/App.js"],"names":["useEffect","useState","PostService","Board","App","boards","setBoards","currentBoard","setCurrentBoard","currentItem","setCurrentItem","console","log"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CACA;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C,CALgB,CAOhB;AACA;AACA;AACA;AACA;;AAMAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1BD;;GAAMD,G;;KAAAA,G;AA4BN,eAAeA,GAAf,C,CAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport PostService from './api/postService';\nimport './App.css';\nimport Board from './boards/board';\n// import Posts from './posts/posts';\n\n\nconst App = () => {\n\n  // const [boards, setBoards] = useState([])\n  const [boards, setBoards] = useState([])\n  const [currentBoard, setCurrentBoard] = useState(null)\n  const [currentItem, setCurrentItem] = useState(null)\n\n  // useEffect(async () => {\n  //   const response = await PostService.getAll()\n  //   const data = response.data\n  //   setBoards(data)\n  // }, [])\n\n\n\n\n\n  console.log(boards)\n  return (\n    <div className='app'>\n     \n    </div>\n\n\n\n  );\n}\n\nexport default App;\n\n// https://jsonplaceholder.typicode.com/posts?_limit=10\n\n\n\n// function dragOverHandler(e) {\n//   e.preventDefault()\n//   if(e.target.className == 'item') {\n//       e.target.style.boxShadow = '0 4px 3px gray'\n//   }\n// }\n\n// function dragLeaveHandler(e) {\n//   e.target.style.boxShadow = 'none'\n// }\n\n// function dragStartHandler (e, board, item) {\n//   setCurrentBoard(board)\n//   setCurrentItem(item)\n// }\n\n// function dragEndHandler(e) {\n//   e.target.style.boxShadow = 'none'\n// }\n\n// function dropHandler (e, board, item) {\n//   e.preventDefault()   \n//   const currentIndex = currentBoard.items.indexOf(currentItem)\n//   // currentBoard.items.splice(currentIndex, 1)\n//   const dropIndex = board.items.indexOf(item)\n//   // board.items.splice(dropIndex + 1, 0, currentItem)\n//   setBoards(boards.map(b => {\n//     if (b.id === board.id){\n//       return board\n//     }\n//     if(b.id === currentBoard.id) {\n//       return currentBoard\n//     }\n//     return b\n//   }))\n// }"]},"metadata":{},"sourceType":"module"}