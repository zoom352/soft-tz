{"ast":null,"code":"var _jsxFileName = \"C:\\\\dragon-drop\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport PostService from './api/postService';\nimport './App.css'; // import Posts from './posts/posts';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [boards, setBoards] = useState([])\n  const [boards, setBoards] = useState([]);\n  const [currentBoard, setCurrentBoard] = useState(null);\n  const [currentItem, setCurrentItem] = useState(null);\n  useEffect(async () => {\n    const response = await PostService.getAll();\n    const data = response.data;\n    setBoards(data);\n  }, []);\n\n  function dragOverHandler(e) {\n    e.preventDefault();\n\n    if (e.target.className == 'board') {\n      e.target.style.boxShadow = '0 4px 3px gray';\n    }\n  }\n\n  function dragLeaveHandler(e) {\n    e.target.style.boxShadow = 'none';\n  }\n\n  function dragStartHandler(e, board, item) {\n    setCurrentBoard(board);\n    setCurrentItem(item);\n  }\n\n  function dragEndHandler(e) {\n    e.target.style.boxShadow = 'none';\n  }\n\n  function dropHandler(e, board, item) {\n    e.preventDefault();\n    const currentIndex = currentBoard.items.indexOf(currentItem);\n    currentBoard.items.splice(currentIndex, 1);\n    const dropIndex = board.items.indexOf(item);\n    board.items.splice(dropIndex + 1, 0, currentItem);\n    setBoards(boards.map(b => {\n      if (b.id === board.id) {\n        return board;\n      } // if(b.id === currentBoard.id){\n      //   return currentBoard\n      // }\n\n\n      return b;\n    }));\n  }\n\n  console.log(boards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: boards.map(board => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board__title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        draggable: true,\n        onDragOver: e => dragOverHandler(e),\n        onDragLeave: e => dragLeaveHandler(e),\n        onDragStart: e => dragStartHandler(e, board, item),\n        onDragEnd: e => dragEndHandler(e),\n        onDrop: e => dropHandler(e, board, item),\n        children: board.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fqGTzaGfIyLiDN2tELt0QbyKIpQ=\");\n\n_c = App;\nexport default App; // https://jsonplaceholder.typicode.com/posts?_limit=10\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/dragon-drop/src/App.js"],"names":["useEffect","useState","PostService","App","boards","setBoards","currentBoard","setCurrentBoard","currentItem","setCurrentItem","response","getAll","data","dragOverHandler","e","preventDefault","target","className","style","boxShadow","dragLeaveHandler","dragStartHandler","board","item","dragEndHandler","dropHandler","currentIndex","items","indexOf","splice","dropIndex","map","b","id","console","log","title"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport PostService from './api/postService';\nimport './App.css';\n\n// import Posts from './posts/posts';\n\n\nconst App = () => {\n\n  // const [boards, setBoards] = useState([])\n  const [boards, setBoards] = useState([])\n  const [currentBoard, setCurrentBoard] = useState(null)\n  const [currentItem, setCurrentItem] = useState(null)\n\n\n  useEffect(async () => {\n    const response = await PostService.getAll()\n    const data = response.data\n    setBoards(data)\n  }, [])\n\n\n\nfunction dragOverHandler(e) {\n    e.preventDefault()\n    if(e.target.className == 'board') {\n        e.target.style.boxShadow = '0 4px 3px gray'\n    }\n}\n\nfunction dragLeaveHandler(e) {\n    e.target.style.boxShadow = 'none'\n}\n\nfunction dragStartHandler (e, board, item) {\n    setCurrentBoard(board)\n    setCurrentItem(item)\n}\n\nfunction dragEndHandler(e) {\n    e.target.style.boxShadow = 'none'\n}\n\nfunction dropHandler (e, board, item) {\n    e.preventDefault()   \n    const currentIndex = currentBoard.items.indexOf(currentItem)\n    currentBoard.items.splice(currentIndex, 1)\n    const dropIndex = board.items.indexOf(item)\n    board.items.splice(dropIndex + 1, 0, currentItem)\n    setBoards(boards.map(b => {\n      if(b.id === board.id){\n        return board\n      }\n      // if(b.id === currentBoard.id){\n      //   return currentBoard\n      // }\n      return b\n    }))\n}\n\n  console.log(boards)\n  return (\n    <div className='app'>\n      {boards.map(board => \n        <div \n          className='board'>\n          <div className='board__title'>\n            \n          </div>\n          <div \n              className='item'\n              draggable={true}\n              onDragOver={(e => dragOverHandler(e))}\n              onDragLeave={e => dragLeaveHandler(e)}\n              onDragStart={e => dragStartHandler(e, board, item)}\n              onDragEnd={e => dragEndHandler(e)}\n              onDrop={(e => dropHandler(e, board, item))}>{board.title}</div>\n         \n        </div>)}\n    </div>\n\n\n\n  );\n}\n\nexport default App;\n\n// https://jsonplaceholder.typicode.com/posts?_limit=10"]},"metadata":{},"sourceType":"module"}